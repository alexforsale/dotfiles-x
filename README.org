#+options: ':t *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+title: Xorg User's Startup Files
#+date: <2021-03-25 Thu>
#+author: Kristian Alexander
#+email: alexforsale@yahoo.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.1 (Org mode 9.5)
#+property: EXPORT_FILE_NAME: index.html
#+startup: showall nohideblocks
* ~/.Xresources
  :PROPERTIES:
  :header-args: :tangle ~/.Xresources
  :END:
** header
   #+begin_src conf
     ! ~/.Xresources
     ! user-level X resources configuration.
     ! Do not edit this file directly.
     ! this file is autogenerated using Emacs org-mode.
     ! <alexforsale@yahoo.com>
   #+end_src
** per-app settings
   #+begin_src conf
     #include ".config/Xresources.d/xterm"
     #include ".config/Xresources.d/URxvt"
   #+end_src
** global settings
   #+begin_src conf
     Xft.dpi: 72
     Xft.lcdfilter:  lcddefault
     Xft.hintstyle:  hintfull
     Xft.hinting: 1
     Xft.antialias: 1
     Xft.rgba: rgb
   #+end_src
** cursor theme
   #+begin_src conf
     Xcursor.theme: ComixCursors-Blue
   #+end_src
* ~/.config/Xresources.d
** URxvt
   :PROPERTIES:
   :header-args: :tangle ~/.config/Xresources.d/URxvt :mkdirp t :padline no
   :END:
*** heading
    #+begin_src conf
      ! ~/.config/Xresources.d/URxvt
      ! X resources for URxvt
      ! Do not edit this file directly.
      ! this file is autogenerated using Emacs org-mode.
      ! <alexforsale@yahoo.com>
    #+end_src
*** Save number lines in the scrollback buffer
    The default is =64=.
    #+begin_src conf
      URxvt.saveLines: 2000
    #+end_src
*** Scrollback buffer in secondary screen
    #+begin_src conf
      URxvt.secondaryScreen: 1
      URxvt.secondaryScroll: 0
    #+end_src
*** Scrollbars
    #+begin_src conf
      URxvt.scrollBar: False
      URxvt.scrollBar_right: false
      URxvt.scrollBar_floating: false
      URxvt.scrollstyle: rxvt
    #+end_src
*** Sets the terminal name
    #+begin_src conf
      URxvt.termName: xterm-256color
    #+end_src
*** Blink cursor
    #+begin_src conf
      URxvt.cursorBlink: True
    #+end_src
*** Only works with patched urxvt
    #+begin_src conf
      URxvt.secondaryWheel: 1
    #+end_src
*** Fonts
    #+begin_src conf
      URxvt.font: xft:Fantasque\ Sans\ Mono:size=8
    #+end_src
*** Copy and Paste
    #+begin_src conf
      ! CTRL-SHIFT-c & CTRL-SHIFT-v
      URxvt.keysym.C-S-0x43: eval:selection_to_clipboard
      URxvt.keysym.C-S-0x56: eval:paste_clipboard
    #+end_src
*** Turn off ISO 14755
    #+begin_src conf
      URxvt.iso14755: false
      URxvt.iso14755_52: false
    #+end_src
*** Bell
    From https://wiki.archlinux.org/index.php/Rxvt-unicode/Tips_and_tricks
    #+begin_src conf
      URxvt.bell-command: canberra-gtk-play -i bell
    #+end_src
** xterm
   :PROPERTIES:
   :header-args: :tangle ~/.config/Xresources.d/xterm :mkdirp t :padline no
   :END:
*** heading
    #+begin_src conf
      ! ~/.config/Xresources.d/xterm
      ! X resources for XTerm
      ! Do not edit this file directly.
      ! this file is autogenerated using Emacs org-mode.
      ! <alexforsale@yahoo.com>
    #+end_src
*** general settings
    #+begin_src conf
      xterm*termName: xterm-256color
      xterm.vt100.geometry: 80x24
      xterm*saveLines: 4096
      xterm*scrollBar: False
      xterm*.LoginShell: True
      xterm*rightScrollBar: False
      xterm*scrollTtyOutput: False
    #+end_src
*** Copy and Paste
    #+begin_src conf
      xterm.selectToClipboard: true
      xterm*translations: #override \
      Ctrl Shift <KeyPress> C: copy-selection(CLIPBOARD) \n\
      Ctrl Shift <KeyPress> V: insert-selection(CLIPBOARD) \n\
      Ctrl <Btn1Up>: exec-formatted("xdg-open '%t'", PRIMARY) \n\
      ~Meta Shift<Key>Tab: string(\033[Z) \n\
      Meta Shift<Key>Tab: string(\033\033[Z) \n\
      Ctrl <Key> minus: smaller-vt-font() \n\
      Ctrl <Key> plus: larger-vt-font() \n\
      Ctrl <Key> 0: set-vt-font(d)
    #+end_src
*** Alt-key input
    #+begin_src conf
      xterm*eightBitInput: false
      xterm*metaSendsEscape: true
    #+end_src
*** Allow selecting email/url by double-click
    #+begin_src conf
      xterm*charClass: 33:48,37-38:48,45-47:48,64:48,58:48,126:48,61:48,63:48,43:48,35:48
    #+end_src
*** font
    #+begin_src conf
      xterm*renderFont: true
      xterm*faceName: Fantasque Sans Mono
      xterm*faceSize: 10
    #+end_src
* ~/.Xprofile
  :PROPERTIES:
  :header-args: :tangle ~/.xprofile :shebang #!/bin/sh
  :END:
  This script will allows you to execute commands at the beginning of X user session.
** header
   #+begin_src sh
     # ~/.xprofile
     # user X session startup file.
     # <alexforsale@yahoo.com>
   #+end_src
** load per-file configuration.
   #+begin_src sh
     if [ -d "${HOME}/.config/xprofile.d" ]; then
         for xfiles in "${HOME}"/.config/xprofile.d/*.sh; do
             # shellcheck disable=1090
             . "${xfiles}"
         done
         unset xfiles
     fi
   #+end_src
** allows for user overrides.
   This is useful if there's a host-specific configuration.
   #+begin_src sh
     # shellcheck disable=1091
     [ -f "${XDG_CONFIG_HOME}"/xprofile.local ] && . "${XDG_CONFIG_HOME}"/xprofile.local
     # shellcheck disable=1091
     [ -f "${HOME}"/.xprofile.local ] && . "${HOME}"/.xprofile.local
   #+end_src
** Stumpwm specifics
   #+begin_src sh
     [ -n "${CHEMACS_PROFILE}" ] && _args="-s ${CHEMACS_PROFILE}"
     # run emacs in stumpwm
     [ "${DESKTOP_SESSION}" == "stumpwm" ] && emacsclient -t "${_args}"
   #+end_src
* ~/.config/xprofile.d
** 00-display.sh
   :PROPERTIES:
   :header-args: :tangle ~/.config/xprofile.d/00-display.sh :mkdirp t :shebang #!/bin/sh :padline no
   :END:
*** header
    #+begin_src sh
      # ~/.config/xprofile.d/00-display.sh
      # various ui-related security settings
      # <alexforsale@yahoo.com>
    #+end_src
*** set scaling based on hostname
    #+begin_src sh
      case "${HOSTNAME}" in
          "arch-server")
              xrandr --output VGA1 --scale 1.25x1.25
              ;;
      esac
    #+end_src
** 00-security.sh
   :PROPERTIES:
   :header-args: :tangle ~/.config/xprofile.d/00-security.sh :mkdirp t :shebang #!/bin/sh :padline no
   :END:
*** header
    #+begin_src sh
      # ~/.config/xprofile.d/00-security.sh
      # various ui-related security settings
      # <alexforsale@yahoo.com>
    #+end_src
*** gnome-keyring-daemon
    #+begin_src sh
      if [ "$(command -v gnome-keyring-daemon)" ] &&
             [ ! $(pgrep -u ${USER} -x gnome-keyring-d) ];then
          eval "$(gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)" >/dev/null 2>&1
          export SSH_AUTH_SOCK GNOME_KEYRING_CONTROL
      fi
    #+end_src
*** ssh-askpass and polkit
    #+begin_src sh
      case "${DISTRO}" in
          gentoo)
              [ -f /usr/bin/x11-ssh-askpass ] &&
                  export SSH_ASKPASS=/usr/bin/x11-ssh-askpass &&
                  export SUDO_ASKPASS=/usr/bin/x11-ssh-askpass

              # polkit
              if [ ! "$(pgrep -u ${USER} -x polkit-gnome-au)" ] &&
                     [ -e /usr/libexec/polkit-gnome-authentication-agent-1 ];then
                    sleep 1 && /usr/libexec/polkit-gnome-authentication-agent-1 &
              fi
              ;;
          arch)
              if [ -f /usr/lib/ssh/x11-ssh-askpass ];then
                    [ ! -L ~/.local/bin/ssh-askpass ] &&
                        ln -sf /usr/lib/ssh/x11-ssh-askpass ~/.local/bin/ssh-askpass
                    export SSH_ASKPASS=ssh-askpass
                    export SUDO_ASKPASS="${HOME}"/.local/bin/ssh-askpass
              fi
              # polkit
              if [ ! "$(pgrep -u ${USER} -x polkit-gnome-authentication-agent-1)" ] &&
                     [ -e /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 ];then
                    sleep 1 && /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
              fi

              # keyring
              [ "$(command -v dbus-update-activation-environment)" ] &&
                  dbus-update-activation-environment --systemd DISPLAY
              ;;
          freebsd)
              [ -f /usr/local/bin/x11-ssh-askpass  ] &&
                  export SSH_ASKPASS=/usr/local/bin/x11-ssh-askpass &&
                  export SUDO_ASKPASS=/usr/local/bin/x11-ssh-askpass

              # polkit
              if [ ! "$(pgrep -u ${USER} -x polkit-gnome-authentication-agent-1)" ] &&
                     [ -e /usr/local/libexec/polkit-gnome-authentication-agent-1 ];then
                    sleep 1 && /usr/local/libexec/polkit-gnome-authentication-agent-1 &
              fi
              # keyring
              [ "$(command -v dbus-update-activation-environment)" ] &&
                  dbus-update-activation-environment DISPLAY
              ;;
      esac
    #+end_src
** 01-gtk-path.sh
   :PROPERTIES:
   :header-args: :tangle ~/.config/xprofile.d/01-gtk-path.sh :mkdirp t :shebang #!/bin/sh :padline no
   :END:
*** header
    #+begin_src sh
      # ~/.config/xprofile.d/01-gtk-path.sh
      # set new location for GTK and GTK2
      # https://wiki.archlinux.org/title/XDG_Base_Directory
      # <alexforsale@yahoo.com>
    #+end_src
*** GTKRC
    #+begin_src sh
      export GTK_RC_FILES="${XDG_CONFIG_HOME}"/gtk-1.0/gtkrc
      [ -d "${GTK_RC_FILES%%/gtkrc}" ] && mkdir -p "${GTK_RC_FILES%%/gtkrc}"
      export GTK2_RC_FILES="${XDG_CONFIG_HOME}"/gtk-2.0/gtkrc
      [ -d "${GTK2_RC_FILES%%/gtkrc}" ] && mkdir -p "${GTK2_RC_FILES%%/gtkrc}"
    #+end_src
* ~/.xinitrc
  :PROPERTIES:
  :header-args: :tangle ~/.xinitrc :shebang #!/bin/sh :padline no
  :END:
** heading
   #+begin_src sh
     # ~/.xinitrc
     # Configuration script for manual X session.
     # <alexforsale@yahoo.com>
   #+end_src
** variables
   #+begin_src sh
     userresources=${HOME}/.Xresources
     usermodmap=${HOME}/.Xmodmap
     OS=$(uname -s)

     case "${OS}" in
         "Linux")
             if [ "${DISTRO}" = "ubuntu" ]; then
                 sysresources=/etc/X11/xinit/Xresources
                 sysmodmap=/etc/X11/xinit/Xmodmap
             else
                 sysresources=/etc/X11/xinit/.Xresources
                 sysmodmap=/etc/X11/xinit/.Xmodmap
             fi
             ;;
         "FreeBSD")
             sysresources=/usr/local/etc/X11/xinit/.Xresources
             sysmodmap=/usr/local/etc/X11/xinit/.Xmodmap
             ;;
     esac
   #+end_src
** merge in defaults and keymaps
   #+begin_src sh
     [ -f "${sysresources}" ] &&
         xrdb -merge "${sysresources}"

     [ -f "${sysmodmap}" ] &&
         xmodmap "${sysmodmap}"

     [ -f "${userresources}" ] &&
         xrdb -merge "${userresources}"

     [ -f "${usermodmap}" ] &&
         xmodmap "${usermodmap}"
   #+end_src
** source system xinit configuration
   #+begin_src sh
     # shellcheck disable=1090
     if [ -d /etc/X11/xinit/xinitrc.d ] ; then
         for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
             [ -x "${f}" ] && . "${f}"
         done
         unset f
     fi
   #+end_src
** setxkbmap
   #+begin_src sh
     setxkbmap -option terminate:ctrl_alt_bksp
   #+end_src
** Change X shaped default cursor
   from arch [[https://wiki.archlinux.org/title/Cursor_themes#X_resources][wiki]]:
   #+begin_src conf
     xsetroot -cursor_name left_ptr
   #+end_src
** source xprofile
   #+begin_src sh
     [ -f /etc/xprofile ] && . /etc/xprofile
     [ -f "${HOME}"/.xprofile ] && . "${HOME}"/.xprofile
   #+end_src
** sets ${DESKTOP_SESSION}
   Only set this if it wasn't already defined.
   #+begin_src sh
     [ -z ${DESKTOP_SESSION} ] && export DESKTOP_SESSION=${1:-exwm}
   #+end_src
** initial wallpapers
   #+begin_src sh
     # for archlinux
     [ -d /usr/share/backgrounds/archlinux/ ] &&
         feh -zr --bg-fill /usr/share/backgrounds/archlinux/
     # FreeBSD
     [ -d /usr/local/share/wallpapers/freebsd-8k-wallpapers/ ] &&
         feh -zr --bg-fill /usr/local/share/wallpapers/freebsd-8k-wallpapers/
   #+end_src
** Chemacs
   This is for /Emacs/.
   #+begin_src sh
     for chemacs_profile in ~/.emacs-profile ~/.config/chemacs/profile; do
         if [ -e ${chemacs_profile} ]; then
             export CHEMACS_PROFILE=`cat ${chemacs_profile}`
         fi
     done

     if [ -n "${CHEMACS_PROFILE}" ]; then
         _emacs_args="-s ${CHEMACS_PROFILE}"
     fi
   #+end_src
** Start the desktop
   #+begin_src sh
     case $DESKTOP_SESSION in
         "exwm")
             exec emacs --debug-init -l ~/.config/exwm/config
             ;;
         "qtile")
             exec qtile start
             ;;
         "stumpwm")
             if [ $(command -v ros) ]; then
                   exec ros run -- --load /usr/local/bin/startstumpwm
             elif [ $(command -v sbcl) ]; then
                   exec sbcl --load /usr/local/bin/startstumpwm
             fi
             ;;
         "i3")
             exec i3 -V >> /tmp/i3.log
             ;;
     esac
   #+end_src
